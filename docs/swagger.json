{
    "swagger": "2.0",
    "info": {
        "description": "Parallels Desktop API Service",
        "title": "Parallels Desktop API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Parallels Desktop API Support",
            "url": "https://forum.parallels.com/",
            "email": "carlos.lapao@parallels.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/v1/auth/api_keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint returns all the api keys",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Api Keys"
                ],
                "summary": "Gets all the api keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ApiKeyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ApiErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.OAuthErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ApiErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ApiKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "revoked": {
                    "type": "boolean"
                },
                "revoked_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OAuthErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/models.OAuthErrorType"
                },
                "error_description": {
                    "type": "string"
                },
                "error_uri": {
                    "type": "string"
                }
            }
        },
        "models.OAuthErrorType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "x-enum-varnames": [
                "OAuthInvalidRequestError",
                "OAuthInvalidClientError",
                "OAuthInvalidGrant",
                "OAuthInvalidScope",
                "OAuthUserExists",
                "OAuthUnauthorizedClient",
                "OAuthUnsupportedGrantType",
                "OAuthPasswordMismatch",
                "OAuthPasswordValidation",
                "OAuthUserValidation",
                "OAuthEmailNotVerified",
                "OAuthUserBlocked",
                "UnknownError"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type the api key in the input below.",
            "type": "apiKey",
            "name": "X-Api-Key",
            "in": "header"
        },
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}